scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    diveLogs(user_id: Int @eq @rules(apply: ["int"])): [DiveLogEntry] @paginate(defaultCount: 25)
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find
    users: [User!]! @paginate(defaultCount: 10)
}

type Mutation {
    login(email: String!, password: String!): accessToken @field(resolver: "LoginMutation@resolve")
}

type accessToken {
    token: String!
    expiresTime: String!
}

type DiveLogEntry {
    id: ID!
    user_id: Int!
    user: User! @belongsTo,
    location: String!,
    bottom_time: String!,
    max_depth: String!,
    options: String!,
}

type User {
    id: ID!
    first_name: String!
    last_name: String!
    email: String!
    user_level: Int!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    DiveLogEntries: [DiveLogEntry] @hasMany
}
